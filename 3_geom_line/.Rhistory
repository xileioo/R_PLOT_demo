head(ref)
rownames(ref)
ref <- ref[!(rownames(ref) %like% "5'UTR"),,drop = F]
#ref <- ref[!(rownames(ref) %like% "GRCm38-release94"),,drop = F]
ref <- ref[!(rownames(ref) %like% "IGH"),,drop = F]
library(data.table)
ref <- ref[!(rownames(ref) %like% "5'UTR"),,drop = F]
#ref <- ref[!(rownames(ref) %like% "GRCm38-release94"),,drop = F]
ref <- ref[!(rownames(ref) %like% "IGH"),,drop = F]
dim(ref)
names <- rownames(ref)
head(names)
ref <- readDNAStringSet(myVDJ_ref_file)
head(ref)
ref <- as.data.frame(ref)
ref <- ref[!(rownames(ref) %like% "5'UTR"),,drop = F]
ref <- ref[rownames(ref) %like% "TRAV",,drop = F]
ref <- ref[rownames(ref) %like% "TRAJ",,drop = F]
ref <- ref[rownames(ref) %like% "TRAV",,drop = F]
ref <- ref[rownames(ref) %like% "TRAJ",,drop = F]
names <- rownames(ref)
names
ref <- readDNAStringSet(myVDJ_ref_file)
head(ref)
ref <- as.data.frame(ref)
(rownames(ref) %like% "5'UTR")
rownames(ref)
rownames(ref) %like% "TRAV"
ref <- readDNAStringSet(myVDJ_ref_file)
head(ref)
ref <- as.data.frame(ref)
names <- rownames(ref)
head(names)
names <- rownames(ref)
names_TRAV <- names[names %like% "TRAV"]
names_TRAJ <- names[names %like% "TRAJ"]
names_TRBV <- names[names %like% "TRBV"]
names_TRBJ <- names[names %like% "TRBJ"]
names_TRAV
length(names_TRAV)
names_TRAJ <- names[names %like% "TRAJ"]
rep("TRAV",length(names_TRAV))
VJ_name <- data.frame(genes = c(names_TRAV,names_TRAJ,names_TRBV,names_TRBJ),
gene_type = c(rep("TRAV",length(names_TRAV)),
rep("TRAJ",length(names_TRAJ)),
rep("TRBV",length(names_TRBV)),
rep("TRBJ",length(names_TRBJ))))
VJ_name
ref <- readDNAStringSet(myVDJ_ref_file)
head(ref)
ref <- as.data.frame(ref)
ref <- ref[!(rownames(ref) %like% "5'UTR"),,drop = F]
names <- rownames(ref)
names_TRAV <- names[names %like% "TRAV"]
names_TRAJ <- names[names %like% "TRAJ"]
names_TRBV <- names[names %like% "TRBV"]
names_TRBJ <- names[names %like% "TRBJ"]
VJ_name <- data.frame(genes = c(names_TRAV,names_TRAJ,names_TRBV,names_TRBJ),
gene_type = c(rep("TRAV",length(names_TRAV)),
rep("TRAJ",length(names_TRAJ)),
rep("TRBV",length(names_TRBV)),
rep("TRBJ",length(names_TRBJ))))
VJ_name
table(VJ_name$gene_type)
library(Biostrings)
library(data.table)
myVDJ_ref_file = 'D:/work/reference/cellranger/refdata-cellranger-vdj-GRCm38-alts-ensembl-5.0.0/fasta/regions.fa'
ref <- readDNAStringSet(myVDJ_ref_file)
head(ref)
ref <- as.data.frame(ref)
ref <- ref[!(rownames(ref) %like% "5'UTR"),,drop = F]
names <- rownames(ref)
names_TRAV <- names[names %like% "TRAV"]
names_TRAJ <- names[names %like% "TRAJ"]
names_TRBV <- names[names %like% "TRBV"]
names_TRBJ <- names[names %like% "TRBJ"]
VJ_name <- data.frame(genes = c(names_TRAV,names_TRAJ,names_TRBV,names_TRBJ),
gene_type = c(rep("TRAV",length(names_TRAV)),
rep("TRAJ",length(names_TRAJ)),
rep("TRBV",length(names_TRBV)),
rep("TRBJ",length(names_TRBJ))))
VJ_name
tmp <- strsplit(VJ_name$genes,"|")
head(tmp)
tmp <- strsplit(VJ_name$genes,"\\|")
head(tmp)
tmp <- do.call(rbind,tmp)
head(tmp)
VJ_name$Gene <- tmp[,3]
head(VJ_name)
VJ_name$Gene
meta_file = "D:/work/project1/PDL1_MC38_TIL/output/1_PDL1_MC38_UMAP_metadata.csv"
tcr_file = "D:/work/project1/PDL1_MC38_TIL/TCR/MB/outs/filtered_contig_annotations.csv"
mymeta <- read.csv(meta_file,row.names = 1)
mytcr <- read.csv(tcr_file,header = T)
dim(mytcr)
#[1] 19565    31
mytcr <- mytcr[mytcr$barcode %in% unique(rownames(mymeta)),]
dim(mytcr)
#[1] 19467    31
mydata <- cbind(mytcr,
mymeta[mytcr$barcode,
c("type","clonotype","cloneFreq_absolute","clonotype_absolute")])
table(mydata$v_gene)
table(mydata$j_gene)
vals <- as.numeric(gsub("myclonotype","",mydata$clonotype_absolute))
mydata <- mydata[order(vals),]
mydata2 <- unique(mydata[,c("v_gene","j_gene","clonotype_absolute","cloneFreq_absolute")])
mydata2$freq_high_low = "high"
mydata2[mydata2$cloneFreq_absolute < 100,]$freq_high_low = "low"
table(mydata2$freq_high_low)
head(mydata2)
setdiff(mydata2$v_gene,VJ_name$Gene)
setdiff(mydata2$j_gene,VJ_name$Gene)
setdiff(VJ_name$Gene,mydata2$j_gene)
head(mydata2)
dim(mydata2)
head(mydata)
mydata2 <- unique(mydata[,c("chain","v_gene","j_gene","clonotype_absolute","cloneFreq_absolute")])
mydata2$freq_high_low = "high"
mydata2[mydata2$cloneFreq_absolute < 100,]$freq_high_low = "low"
table(mydata2$freq_high_low)
head(mydata2)
mydata2_TRA <- mydata2[mydata2$chain == "TRA",]
dim(mydata2_TRA)
head(mydata2_TRA)
library(plyr)
cols <- c("v_gene","j_gene")
apply(mydata2_TRA[,cols],2,count)
head(mydata2_TRA[,c("v_gene","j_gene")])
head(apply(mydata2_TRA[,c("v_gene","j_gene")],2,count)
)
ID <- seq(1:177)
Age <- sample(c("0-15", "16-29", "30-44", "45-64", "65+"), 177, replace = TRUE)
Sex <- sample(c("Male", "Female"), 177, replace = TRUE)
Country <- sample(c("England", "Wales", "Scotland", "N. Ireland"), 177, replace = TRUE)
Health <- sample(c("Poor", "Average", "Good"), 177, replace = TRUE)
Survey <- data.frame(Age, Sex, Country, Health)
mydata2_TRA[, .N, by=.(v_gene, v_gene)]
mydata2_TRA[, .N, by=.(v_gene, v_gene)]
library(data.table)
library(tidyr)
mydata2_TRA[, .N, by=.(v_gene, v_gene)]
head(mydata2_TRA)
mydata2_TRA[, .N, by=.(v_gene, j_gene)]
head(Survey)
Survey[, .N, by=.(Age, Sex, Health)]
head(mydata2_TRA)
counts <- ddply(mydata2_TRA, .(mydata2_TRA$v_gene, mydata2_TRA$j_gene), nrow)
head(counts
)
table(counts$V1)
library(plyr)
meta_file = "D:/work/project1/PDL1_MC38_TIL/output/1_PDL1_MC38_UMAP_metadata.csv"
tcr_file = "D:/work/project1/PDL1_MC38_TIL/TCR/MB/outs/filtered_contig_annotations.csv"
mymeta <- read.csv(meta_file,row.names = 1)
mytcr <- read.csv(tcr_file,header = T)
dim(mytcr)
#[1] 19565    31
mytcr <- mytcr[mytcr$barcode %in% unique(rownames(mymeta)),]
dim(mytcr)
#[1] 19467    31
mydata <- cbind(mytcr,
mymeta[mytcr$barcode,
c("type","clonotype","cloneFreq_absolute","clonotype_absolute")])
table(mydata$v_gene)
table(mydata$j_gene)
vals <- as.numeric(gsub("myclonotype","",mydata$clonotype_absolute))
mydata <- mydata[order(vals),]
dim(mydata)
head(mydata)
mydata2 <- mydata[,c("chain","v_gene","j_gene","clonotype_absolute","cloneFreq_absolute")]
dim(mydata2)
head(mydata2)
counts <- ddply(mydata2, .(mydata2$chain,mydata2$v_gene, mydata2$j_gene), nrow)
head(counts)
counts <- ddply(mydata2, .(mydata2$v_gene, mydata2$j_gene), nrow)
head(counts)
counts <- ddply(mydata2, .(mydata2$chain,mydata2$v_gene, mydata2$j_gene), nrow)
head(counts)
colnames(counts) <- c("chain","v_gene","j_gene","count")
head(counts)
head(VJ_name)
nrow(VJ_name[VJ_name$gene_type == "TRAV",])
TRAV
TRAV <- VJ_name[VJ_name$gene_type == "TRAV",]
TRAV
TRAV <- VJ_name[VJ_name$gene_type == "TRAV",]$Gene
TRAV
table(VJ_name$gene_type)
TRAV <- VJ_name[VJ_name$gene_type == "TRAV",]$Gene
TRAJ <- VJ_name[VJ_name$gene_type == "TRAJ",]$Gene
TRBV <- VJ_name[VJ_name$gene_type == "TRBV",]$Gene
TRBJ <- VJ_name[VJ_name$gene_type == "TRBJ",]$Gene
TRBJ
TRBV
TRAV
TRAJ
51*98
13*23
head(counts)
dim(counts)
length(table(counts$v_gene))
length(table(counts$j_gene))
table(counts$v_gene)
rm(list=ls())
library(org.Hs.eg.db)
eg2symbol=toTable(org.Hs.egSYMBOL)
eg2name=toTable(org.Hs.egGENENAME)
eg2alias=toTable(org.Hs.egALIAS2EG)
head(eg2alias)
a <- split(eg2alias,eg2alias$gene_id
)
head(a)
head(eg2alias)
eg2alis_list=lapply(split(eg2alias,eg2alias$gene_id),function(x){paste0(x[,2],collapse = ";")})
head(eg2alias)
head(eg2alis_list)
8*12
1.2*12
12*12
1.7*5
1.7*12
1.5*12
11*12
6/12
10641+2194+254
964+2194+254
9344+2194+254
10641 -  9344
303*4
11792 - 1212
2000/30
2500/4
10580-2500
8000-2194
3528+250
3528+250-303*4
library("flowCore")
library(ggplot2)
library(stringr)
#-----------------------------------------------------------------------------
# FR-FCM-ZY69 - MC38
# merge data
#-----------------------------------------------------------------------------
setwd("D:/work/task_JZ/20211019_Cytof_PD1_Treg/FR-FCM-ZY69") # MC38
#fcs <- read.FCS("FR-FCM-ZY69/20160829 MC38 AbTx2 CD3 C312.fcs",transformation=FALSE)
meta_data <- read.table("metadata_FR-FCM-ZY69.txt",sep = "\t",header = T)
meta_data <- meta_data[meta_data$type == "Tcells",]
mydata <- data.frame()
for(i in 1:nrow(meta_data)){
input_file = meta_data[i,"filename"]
group = meta_data[i,"group"]
mouseID = strsplit(input_file, " |\\.")[[1]][5]
fcs <- read.FCS(input_file,transformation=FALSE)
fcs <- as.data.frame(fcs@exprs)
fcs$group = group
fcs$mouseID = mouseID
fcs$sample = "MC38"
fcs <- fcs[,order(colnames(fcs),decreasing = T)]
fcs <- fcs[,1:60]
mydata <- rbind(mydata,fcs)
}
colnames(mydata)[c(2,6,7)] <- c("cluster","SNE2","SNE1") #"PhenoGraph Each K30 BDOV50335" is cluster
tmp <- strsplit(colnames(mydata)[8:60], "_")
tmp <- do.call(rbind,tmp)
colnames(mydata)[8:60] <- tmp[,2]
mydata$cluster <- as.factor(mydata$cluster)
dim(mydata)
#[1] 218939     60
mydata <- mydata[,c(1:4,6,7,8:12,14:25,27:50,52)]
library(reshape2)
library(ggpubr)
library(ggplot2)
mydata <- mydata[mydata$cluster %in% c(1,9,13),] # cluster-1 and cluster-9 is Treg
dim(mydata)
#[1] 50859    48
head(mydata)
mydata2 <- mydata[,c("sample","cluster","mouseID","group","SNE1","SNE2","CXCR3","MHC-I","MHC-II")]
mydata2 <- mydata2[mydata2$CXCR3 > 0 & mydata2$`MHC-I` > 0 & mydata2$`MHC-II` > 0,]
pdata <- melt(mydata2,
id = c("sample","cluster","mouseID","group","SNE1","SNE2"))
pdata$cluster <- paste("cluster",pdata$cluster,sep = "_")
pdata <- pdata[,c("value","cluster","group","variable")]
colnames(pdata) <- c("exp","cluster","group","protein")
pdata$group <- factor(pdata$group, levels = c("Control","anti-CTLA-4","anti-PD-1"))
pdata$cluster <- factor(pdata$cluster,levels = c("cluster_1","cluster_9","cluster_13"))
pdata$protein <- as.character(pdata$protein)
head(pdata)
table(pdata$group)
table(pdata$protein)
pdata[pdata$protein == "MHC-I",]$protein = "PDCD1"
table(pdata$protein)
pdata[pdata$protein == "MHC-II",]$protein = "SELL"
table(pdata$protein)
table(pdata$group)
pdata[pdata$group == "anti-CTLA-4",]$group = "GroupA"
pdata$group <- as.character(pdata$group)
pdata[pdata$group == "anti-CTLA-4",]$group = "GroupA"
table(pdata$group)
head(mydata)
mydata2 <- mydata[,c("sample","cluster","mouseID","group","SNE1","SNE2","CXCR3","MHC-I","MHC-II")]
mydata2 <- mydata2[mydata2$CXCR3 > 0 & mydata2$`MHC-I` > 0 & mydata2$`MHC-II` > 0,]
pdata <- melt(mydata2,
id = c("sample","cluster","mouseID","group","SNE1","SNE2"))
pdata$cluster <- paste("cluster",pdata$cluster,sep = "_")
pdata <- pdata[,c("value","cluster","group","variable")]
colnames(pdata) <- c("exp","cluster","group","protein")
pdata$group <- factor(pdata$group, levels = c("Control","anti-CTLA-4","anti-PD-1"))
pdata$cluster <- factor(pdata$cluster,levels = c("cluster_1","cluster_9","cluster_13"))
pdata$protein <- as.character(pdata$protein)
head(pdata)
pdata[pdata$protein == "MHC-I",]$protein = "PDCD1"
pdata[pdata$protein == "MHC-II",]$protein = "SELL"
pdata$group <- as.character(pdata$group)
pdata[pdata$group == "anti-CTLA-4",]$group = "GroupA"
table(pdata$group)
table(pdata$protein)
pdata[pdata$group == "anti-PD-1",]$group = "GroupB"
table(pdata$protein)
table(pdata$group)
head(pdata)
write.csv(pdata,"1_2_boxplot_stat_input.csv")
write.csv(pdata,"1_2_boxplot_stat_input.csv",row.names = F)
getwd()
setwd("D:/study/R/R_PLOT_demo/R_PLOT_demo/1_boxplot")
pdata <- read.csv("1_2_boxplot_stat_input.csv",header = T)
head(pdata)
p <- ggboxplot(
pdata, x = "cluster", y = "exp", color = "group",
palette = "jco", facet.by = "protein",scales="free")
p
stat.test <- pdata %>%
group_by(cluster, protein) %>%
t_test(exp ~ group,ref.group = "Control")
stat.test
library(rstatix)
stat.test <- pdata %>%
group_by(cluster, protein) %>%
t_test(exp ~ group,ref.group = "Control")
stat.test
stat.test <- stat.test %>%
add_xy_position(x = "cluster", dodge = 0.8)
stat.test <- stat.test %>%
add_xy_position(x = "cluster", dodge = 0.8)
stat.test[stat.test$group2 == "GroupA",]$y.position <- stat.test[stat.test$group2 == "GroupA",]$y.position - 1
p +
stat_pvalue_manual(
stat.test, label = "p.adj.signif", tip.length = 0.01
)
stat.test[stat.test$group2 == "GroupB",]$y.position <- stat.test[stat.test$group2 == "GroupB",]$y.position - 1
p +
stat_pvalue_manual(
stat.test, label = "p.adj.signif", tip.length = 0.01
)
p <- ggboxplot(
pdata, x = "cluster", y = "exp", color = "group",
palette = "jco", facet.by = "protein",scales="free")
stat.test <- pdata %>%
group_by(cluster, protein) %>%
t_test(exp ~ group,ref.group = "Control")
stat.test
stat.test <- stat.test %>%
add_xy_position(x = "cluster", dodge = 0.8)
stat.test[stat.test$group2 == "GroupB",]$y.position <- stat.test[stat.test$group2 == "GroupB",]$y.position - 1
p +
stat_pvalue_manual(
stat.test, label = "p.adj.signif", tip.length = 0.01
)
ggsave("1_2_boxplot_stat_plot.png",width = 12,height = 8,device = "png")
head(pdata)
pdata[pdata$cluster == "cluster_9",]$cluster <- "cluster_0"
pdata[pdata$cluster == "cluster_13",]$cluster <- "cluster_2"
write.csv(pdata,"1_2_boxplot_stat_input.csv",quote = F,row.names = F)
pdata <- read.csv("1_2_boxplot_stat_input.csv",header = T)
p <- ggboxplot(
pdata, x = "cluster", y = "exp", color = "group",
palette = "jco", facet.by = "protein",scales="free")
stat.test <- pdata %>%
group_by(cluster, protein) %>%
t_test(exp ~ group,ref.group = "Control")
stat.test
stat.test <- stat.test %>%
add_xy_position(x = "cluster", dodge = 0.8)
stat.test[stat.test$group2 == "GroupB",]$y.position <- stat.test[stat.test$group2 == "GroupB",]$y.position - 1
p +
stat_pvalue_manual(
stat.test, label = "p.adj.signif", tip.length = 0.01
)
pdata <- read.csv("1_2_boxplot_stat_input.csv",header = T)
p <- ggboxplot(
pdata, x = "cluster", y = "exp", color = "group",
palette = "jco", facet.by = "protein",scales="free")
stat.test <- pdata %>%
group_by(cluster, protein) %>%
t_test(exp ~ group,ref.group = "Control")
stat.test
stat.test <- stat.test %>%
add_xy_position(x = "cluster", dodge = 0.8)
stat.test[stat.test$group2 == "GroupB",]$y.position <- stat.test[stat.test$group2 == "GroupB",]$y.position - 1
p +
stat_pvalue_manual(
stat.test, label = "p.adj.signif", tip.length = 0.01
)
ggsave("1_2_boxplot_stat_plot.png",width = 12,height = 8,device = "png")
library(ggplot2)
library(RColorBrewer)
setwd("D:/work/task_JZ/20211217_linePlot")
mydata <- read.csv("input2.csv",header = T)
mydata
mydata[is.na(mydata)] = 10^-5
mydata[mydata$KD < 10^-9.5,]$KD = 10^-9.5
mydata$value <- -log10(mydata$KD)
pdata <- mydata[mydata$dataset == "dataset2",c("Antibodies","Antigen","value")]
head(pdata)
table(pdata$Antibodies)
gsub("314bispecific","A",pdata$Antibodies)
pdata$Antibodies <- gsub("314bispecific","A",pdata$Antibodies)
table(pdata$Antibodies)
pdata$Antibodies <- gsub("ADG-2","B",pdata$Antibodies)
table(pdata$Antibodies)
pdata$Antibodies <- gsub("BRII-196","C",pdata$Antibodies)
pdata$Antibodies <- gsub("BRII-198","D",pdata$Antibodies)
table(pdata$Antibodies)
pdata$Antibodies <- gsub("DXP-593","E",pdata$Antibodies)
pdata$Antibodies <- gsub("DXP604","F",pdata$Antibodies)
pdata$Antibodies <- gsub("P15-16","G",pdata$Antibodies)
table(pdata$Antibodies)
head(pdata)
table(pdata$Antigen)
colnames(pdata)[2] <- "Sample"
head(pdata)
colnames(pdata)[1] <- "Patient"
head(pdata)
colnames(pdata)[2] <- "Group"
colnames(pdata)[1] <- "Sample"
head(pdata)
write.csv(pdata,"D:/study/R/R_PLOT_demo/R_PLOT_demo/3_geom_line/3_1_geom_line_input.csv",quote = F,row.names = F)
library(ggplot2)
library(RColorBrewer)
setwd("D:\study\R\R_PLOT_demo\R_PLOT_demo\3_geom_line")
library(ggplot2)
library(RColorBrewer)
setwd("D:/study/R/R_PLOT_demo/R_PLOT_demo/3_geom_line")
mydata <- read.csv("3_1_geom_line_input.csv",header = T)
mydata
pd = position_dodge(0)
pdata <- read.csv("3_1_geom_line_input.csv",header = T)
pdata
ggplot(pdata,aes(x=Sample,y=value,color=Group,shape=Group,group=Group)) +
geom_hline(yintercept=5.5, linetype="dashed", color = "black") +
geom_hline(yintercept=9.5, linetype="dashed", color = "black")
ggplot(pdata,aes(x=Sample,y=value,color=Group,shape=Group,group=Group)) +
geom_hline(yintercept=5.5, linetype="dashed", color = "black") +
geom_hline(yintercept=9.5, linetype="dashed", color = "black") +
#geom_jitter()
geom_line(position = pd) +
geom_point(position = pd,size = 3)
ggplot(pdata,aes(x=Sample,y=value,color=Group,shape=Group,group=Group)) +
geom_hline(yintercept=5.5, linetype="dashed", color = "black") +
geom_hline(yintercept=9.5, linetype="dashed", color = "black") +
#geom_jitter()
geom_line(position = pd) +
geom_point(position = pd,size = 3) +
#scale_color_brewer(palette="Dark2") +
scale_shape_manual(values = c(15,19,17,0,2,0,2,0,5)) +
scale_color_manual(values = c("#e31a1c","#d95f02","#1f78b4",
"#33a02c","#6a3d9a","#666666","#ff7f00")) +
theme_bw()
ggplot(pdata,aes(x=Sample,y=value,color=Group,shape=Group,group=Group)) +
geom_hline(yintercept=5.5, linetype="dashed", color = "black") +
geom_hline(yintercept=9.5, linetype="dashed", color = "black") +
#geom_jitter()
geom_line(position = pd) +
geom_point(position = pd,size = 3) +
#scale_color_brewer(palette="Dark2") +
scale_shape_manual(values = c(15,19,17,0,2,0,2,0,5)) +
scale_color_manual(values = c("#e31a1c","#d95f02","#1f78b4",
"#33a02c","#6a3d9a","#666666","#ff7f00")) +
theme_bw() +
xlab("") + ylab("Value") +
theme(axis.title.x = element_text(color="black", size=12),
axis.title.y = element_text(color="black", size=12),
axis.text = element_text(color="black", size=12),
panel.grid = element_blank()) +
scale_y_continuous(labels=c("5" = ">1e-05", "6" = 10^-6,
"7" = 10^-7, "8" = 10^-8, "9" = 10^-9,
"10" = "<1e-10"))
head(pdata)
table(pdata$Sample)
pdata$Sample <- factor(pdata$Sample, levels = c("WT","Mut"))
pd = position_dodge(0)
ggplot(pdata,aes(x=Sample,y=value,color=Group,shape=Group,group=Group)) +
geom_hline(yintercept=5.5, linetype="dashed", color = "black") +
geom_hline(yintercept=9.5, linetype="dashed", color = "black") +
#geom_jitter()
geom_line(position = pd) +
geom_point(position = pd,size = 3) +
#scale_color_brewer(palette="Dark2") +
scale_shape_manual(values = c(15,19,17,0,2,0,2,0,5)) +
scale_color_manual(values = c("#e31a1c","#d95f02","#1f78b4",
"#33a02c","#6a3d9a","#666666","#ff7f00")) +
theme_bw() +
xlab("") + ylab("Value") +
theme(axis.title.x = element_text(color="black", size=12),
axis.title.y = element_text(color="black", size=12),
axis.text = element_text(color="black", size=12),
panel.grid = element_blank()) +
scale_y_continuous(labels=c("5" = ">1e-05", "6" = 10^-6,
"7" = 10^-7, "8" = 10^-8, "9" = 10^-9,
"10" = "<1e-10"))
ggsave("3_1_geom_line_plot.png",device = "png")
